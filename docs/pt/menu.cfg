#
#  Exemplo de ficheiro de configuração para Easyboot
#
#  DICA: executar `easyboot -vv` (com pelo menos 2 'v's) validará a entrada, o
#  que inclui também uma verificação de sintaxe do ficheiro de configuração de
#  arranque.
#

# ------------------------------------------------------------------------------
# Por defeito, as mensagens de arranque são suprimidas, modo "silencioso". Pode
# aumentar o nível de verbosidade para ver cada vez mais detalhes.

verbose 1
#verbose 3

# ------------------------------------------------------------------------------
# O framebuffer está sempre configurado, por defeito, a 800 x 600 x 32bpp. Pode
# alterar isso com a seguinte linha. Também pode especificar as cores de
# primeiro e segundo plano, bem como a cor da barra de progresso.

framebuffer 1024 768 16
#framebuffer 1920 1080 32 #202020 #f0f0f0 #d0d0d0

# ------------------------------------------------------------------------------
# A opção `default` informa qual o `menuentry` a inicializar após um tempo
# limite quando não há interação do utilizador. O primeiro número é o índice,
# de 1 a 9, e o segundo argumento está em milissegundos.

# escolha a primeira opção automaticamente após 5 segundos
default 1 5000

# ------------------------------------------------------------------------------
# Por predefinição, as opções de arranque no menu estão organizadas
# horizontalmente. Pode alterar isso para vertical.

#menualign vertical

# ------------------------------------------------------------------------------
# Esta linha inicia uma nova opção de arranque. Dura até à próxima linha
# `menuentry`. O primeiro argumento é o ícone, o segundo é uma versão opcional
# ou informação de lançamento, o último apenas ASCII. Para cada ícone, deve
# existir um ficheiro easyboot/(ícone).tga, com 64 pixels de altura e 64 pixels
# de largura no formato TGA comprimido RLE indexado (mapeamento de cor).

menuentry linux current

# ------------------------------------------------------------------------------
# Se o kernel e os módulos não estiverem localizados na partição de arranque,
# mas sim noutra, pode especificar aqui a partição raiz.

partition 01020304-0506-0708-0a0b0c0d0e0f1011

# Se estiver a carregar ficheiros de outra partição que não seja a de arranque,
# precisará de plugins do sistema de ficheiros.

# ------------------------------------------------------------------------------
# Com o `kernel` pode dizer qual o ficheiro a carregar e quais os argumentos a
# passar. O caminho deve ser absoluto (sem `.` nem `..`), e a sua raiz deve ser
# relativa à partição raiz (ou de arranque) seleccionada. Se forem utilizados os
# diretórios, o separador será `/` (também no UEFI). Um espaço separa o caminho
# da linha de comandos, pelo que, se precisar de um espaço no caminho, deve
# escapá-lo com uma barra invertida, como `meu\ kernel`. A correspondência de
# nomes não distingue letras maiúsculas e minúsculas.

kernel vmlinuz-linux console=ttyS0,115200 console=tty0
#kernel mykernel
#kernel core.exe
#kernel boot/bzImage quiet
#kernel EFI/boot/3rd\ Party.elf
# a partição raiz também pode ser especificada na linha de comandos de arranque
#kernel vmlinuz-linux root=PARTUUID=01020304-0506-0708-0a0b0c0d0e0f1011

# Se o seu kernel não for ELF ou PE, ou não utilizar o protocolo Multiboot2,
# necessitará de plugins do carregador de kernel para o arrancar.

# ------------------------------------------------------------------------------
# Pode carregar mais ficheiros com a directiva `module`. A mesma sintaxe que
# `kernel`, o primeiro argumento é um caminho, os restantes são parâmetros
# opcionais para si.

module initrd
#module boot/rootfs.tgz arch=qualquer alguns outros argumentos

# Se tiver um módulo comprimido sem gzip e quiser que seja descomprimido de
# forma transparente, necessitará de plug-ins descomprimidos.

# ------------------------------------------------------------------------------
# É claro que pode exibir um logótipo de arranque. Precisa de estar no formato
# TGA comprimido RLE e indexado (mapeado por cores). Se o primeiro argumento não
# começar com a marca de hash `#`, então existe apenas um argumento: o ficheiro
# do logótipo. Se o primeiro argumento começar por `#`, será apresentada uma
# notação de cor HTML, definindo a cor de fundo. Neste caso, o segundo argumento
# é o caminho.

bootsplash #1177FF logo.tga
#bootsplash logo.tga
#bootsplash #00FF00 boot/imagens/a\ minha\ tela\ inicial.tga

# O logótipo de arranque é apresentado quando este `menuentry` é selecionado
# para arranque.

# ------------------------------------------------------------------------------
# Pode iniciar o kernel em todos os núcleos do processador de uma só vez.

#multicore

# ------------------------------------------------------------------------------
# Mais especificações de `menuentry` podem ser encontradas. Apenas a linha
# `kernel` é obrigatória neles, e também pode usar blocos (apenas eyecandy).

menuentry linux backup {
    kernel vmlinuz-backup console=ttyS0,115200 console=tty0
}
